<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>David Christafore</title>
    <link>https://academic-demo.netlify.app/</link>
      <atom:link href="https://academic-demo.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <description>David Christafore</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>https://academic-demo.netlify.app/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>David Christafore</title>
      <link>https://academic-demo.netlify.app/</link>
    </image>
    
    <item>
      <title>Example Talk</title>
      <link>https://academic-demo.netlify.app/talk/example-talk/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://academic-demo.netlify.app/talk/example-talk/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Wowchemy&amp;rsquo;s &lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further event details, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;page elements&lt;/a&gt; such as image galleries, can be added to the body of this page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Analyzing the Relationship between County Natural Amenities and Land-Use Regulations</title>
      <link>https://academic-demo.netlify.app/post/regulation-amenities/reg_amens/</link>
      <pubDate>Tue, 12 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://academic-demo.netlify.app/post/regulation-amenities/reg_amens/</guid>
      <description>


&lt;p&gt;I start by loading the packages I will need for the analysis. This is the document. Let’s make it great.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readxl) # For importing Excel files
library(haven)  # For importing Stata files
library(tidyverse) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Wharton Residential Land Use Regulation Index (WRLURI) is an aggregate index measuring the regulatory constraint on development in a neighborhood. The index was originally published in 2008 and an updated version was published in 2018. For this analysis, I use the 2008 version. The data are downloaded as a Stata Data file, so I use the &lt;code&gt;read_dta&lt;/code&gt; function from the &lt;code&gt;haven&lt;/code&gt; package to import it.&lt;/p&gt;
&lt;p&gt;The data set includes a lot of variables on the on answers to the questions used to create the WRLURI. I limit the data set to just the geographic variables, state name and ufips, and the WRLURI. Furthermore, I drop places in Alaska and Hawaii. These states are not included in the natural amenities index. Also, some entries have been included in the data set for which the WRLURI wasn’t calculated, and I drop these observations as well/&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;wrluri_raw &amp;lt;- read_dta(&amp;quot;WHARTON LAND REGULATION DATA_1_24_2008.dta&amp;quot;) |&amp;gt; 
  select(statename, ufips, WRLURI) |&amp;gt; 
  filter(!is.na(WRLURI), !statename %in% c(&amp;quot;AK&amp;quot;, &amp;quot;HI&amp;quot;))

glimpse(wrluri_raw)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 2,605
## Columns: 3
## $ statename &amp;lt;chr&amp;gt; &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, …
## $ ufips     &amp;lt;dbl&amp;gt; 45784, 33448, 57048, 20104, 3076, 14392, 5980, 57120, 50192,…
## $ WRLURI    &amp;lt;dbl&amp;gt; -1.14343214, -0.80467761, -1.52855742, -1.29472172, -0.20321…&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Taking a glimpse at the data, we see there are 2605 place observations. &lt;code&gt;statename&lt;/code&gt; is a character variable giving the two letter state abbreviation, &lt;code&gt;ufips&lt;/code&gt; is a dbl variable for the place code within the state, and &lt;code&gt;WRLURI&lt;/code&gt; is the regulation index. &lt;code&gt;statename&lt;/code&gt; and &lt;code&gt;ufips&lt;/code&gt; should uniquely identify places in the data set, which I first check for.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;wrluri_raw |&amp;gt; 
  count(statename, ufips) |&amp;gt; 
  filter(n &amp;gt; 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 × 3
##   statename ufips     n
##   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1 CT        62710     2
## 2 FL        62500     2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In fact, we see two places, one in FL and one in CT, have multiple observations. Without having any additional data on why I have these two duplicates, I will take the average of their WRLURI scores for the place WRLURI. Also, &lt;code&gt;ufips&lt;/code&gt; being an identifier should really be a character variable. Since it is numeric, the leading 0s in the 5 digit codes have been dropped, which could cause problems when joining this data to other data. I add back in the leading 0s and make it into a character type.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;wrluri &amp;lt;- wrluri_raw |&amp;gt;
  group_by(statename, ufips) |&amp;gt;
  summarize(across(where(is.numeric), mean), .groups = &amp;quot;drop&amp;quot;) |&amp;gt; 
  mutate(ufips = str_pad(as.character(ufips), 5, &amp;quot;left&amp;quot;, &amp;quot;0&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have the WRLURI data at the Census place level. The natural amenity data is at the county level. Therefore, I need to use the WRLURI data to assign regulation scores at the county level. To do this, I have to connect Census places to counties. The best resource for this is the Mable Missouri site. I download a crosswalk file from there in &lt;code&gt;geocorr2000.csv&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;counties_cross_raw &amp;lt;- read_csv(&amp;quot;geocorr2000.csv&amp;quot;, skip = 1)
head(counties_cross_raw)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 × 10
##   county cousubfp `FIPS state` placefp `State Postal Code` cntyname  
##   &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;               &amp;lt;chr&amp;gt;     
## 1 01001  90171    01           03220   AL                  Autauga AL
## 2 01001  90171    01           99999   AL                  Autauga AL
## 3 01001  90315    01           06460   AL                  Autauga AL
## 4 01001  90315    01           99999   AL                  Autauga AL
## 5 01001  92106    01           99999   AL                  Autauga AL
## 6 01001  92628    01           48712   AL                  Autauga AL
## # … with 4 more variables: `County Subdivision Name` &amp;lt;chr&amp;gt;, `Place Name` &amp;lt;chr&amp;gt;,
## #   `Total Pop, 2000 census` &amp;lt;dbl&amp;gt;, `placefp to county allocation factor` &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Inspecting the data, we see that each county has its population broken down by county subdivision (&lt;code&gt;cousubfp&lt;/code&gt;) and place (&lt;code&gt;placefp&lt;/code&gt;). The &lt;code&gt;ufips&lt;/code&gt; code in the WRLURI data actually represents either a county subdivision or a place code. Therefore, in joining the two data sets, we need to join &lt;code&gt;ufips&lt;/code&gt; on each of these codes. Also, take into consideration that for some places within counties the &lt;code&gt;cousubfp&lt;/code&gt; and &lt;code&gt;placefp&lt;/code&gt; are the same. Therefore, after joining the data, I create one WRLURI score for each part of a county by using the WRLURI value found in the WRLURI column from either join.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;wrluri_counties &amp;lt;- counties_cross_raw |&amp;gt; 
  rename(statename = `State Postal Code`, pop = `Total Pop, 2000 census`) |&amp;gt;
  left_join(wrluri, by = c(&amp;quot;statename&amp;quot;, &amp;quot;placefp&amp;quot; = &amp;quot;ufips&amp;quot;)) |&amp;gt; 
  left_join(wrluri, by = c(&amp;quot;statename&amp;quot;, &amp;quot;cousubfp&amp;quot; = &amp;quot;ufips&amp;quot;)) |&amp;gt; 
  mutate(WRLURI = if_else(!is.na(WRLURI.x), WRLURI.x, WRLURI.y))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now for each part of a county, we have that parts population and the WRLURI index if one exists in the data. To create a WRLURI index for each county, I calculate a population weighted average of all the WRLURI scores that I have for that county. I first drop all county parts without any WRLURI score. In the resulting data, only counties where some part of the county has a regulation score are included.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;wrluri_by_county &amp;lt;- wrluri_counties |&amp;gt; 
  filter(!is.na(WRLURI)) |&amp;gt; 
  mutate(weighted_WRLURI = pop * WRLURI) |&amp;gt; 
  group_by(county, statename, cntyname) |&amp;gt; 
  summarize(WRLURI = sum(weighted_WRLURI) / sum(pop), .groups = &amp;quot;drop&amp;quot;) 

glimpse(wrluri_by_county)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 1,194
## Columns: 4
## $ county    &amp;lt;chr&amp;gt; &amp;quot;01001&amp;quot;, &amp;quot;01003&amp;quot;, &amp;quot;01005&amp;quot;, &amp;quot;01009&amp;quot;, &amp;quot;01015&amp;quot;, &amp;quot;01017&amp;quot;, &amp;quot;01021…
## $ statename &amp;lt;chr&amp;gt; &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, &amp;quot;AL&amp;quot;, …
## $ cntyname  &amp;lt;chr&amp;gt; &amp;quot;Autauga AL&amp;quot;, &amp;quot;Baldwin AL&amp;quot;, &amp;quot;Barbour AL&amp;quot;, &amp;quot;Blount AL&amp;quot;, &amp;quot;Calh…
## $ WRLURI    &amp;lt;dbl&amp;gt; -0.99175501, -0.86308270, -1.61325812, -1.20440900, -0.32421…&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The resulting data contains WRLURI observations for 1194 counties. The next step is to import the natural amenity data. The file containing the natural amenity rankings &lt;code&gt;natamenf_1_.xls&lt;/code&gt; is available for download from somewhere. I use the &lt;code&gt;read_excel&lt;/code&gt; function from the &lt;code&gt;readxl&lt;/code&gt; package to import the data.&lt;/p&gt;
&lt;p&gt;By first opening the file in Excel, I see the first 101 lines are metadata with definitions of the variables. Lines 102 to 105 contain the column names, and the
observations begin on line 106. I import the data skipping the first 105 lines, and including the geographic and natural amenity variables important to the analysis. Additionally, after some research, I learned that the Census code for Miami-Dade county was updated in later years from the 12025 used in this data to the 12086 used in the county data, so I make this adjustment.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nm &amp;lt;- c(&amp;quot;county&amp;quot;, &amp;quot;census_div&amp;quot;, &amp;quot;amenity_scale&amp;quot;, &amp;quot;amenity_rank&amp;quot;)
typ &amp;lt;- c(&amp;quot;text&amp;quot;, rep(&amp;quot;skip&amp;quot;, 3), &amp;quot;numeric&amp;quot;, rep(&amp;quot;skip&amp;quot;, 15), rep(&amp;quot;numeric&amp;quot;, 2))

amenities &amp;lt;- read_excel(&amp;quot;natamenf_1_.xls&amp;quot;, 
                        col_names = nm, 
                        col_types = typ, 
                        skip = 105) |&amp;gt; 
  mutate(county = if_else(county == &amp;quot;12025&amp;quot;, &amp;quot;12086&amp;quot;, county))

glimpse(amenities)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 3,111
## Columns: 4
## $ county        &amp;lt;chr&amp;gt; &amp;quot;01001&amp;quot;, &amp;quot;01003&amp;quot;, &amp;quot;01005&amp;quot;, &amp;quot;01007&amp;quot;, &amp;quot;01009&amp;quot;, &amp;quot;01011&amp;quot;, &amp;quot;0…
## $ census_div    &amp;lt;dbl&amp;gt; 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,…
## $ amenity_scale &amp;lt;dbl&amp;gt; 0.78, 1.82, 0.19, -0.15, 0.23, -1.08, -1.16, 0.22, -0.34…
## $ amenity_rank  &amp;lt;dbl&amp;gt; 4, 4, 4, 3, 4, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4,…&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The resulting data frame includes &lt;code&gt;amenity_scale&lt;/code&gt;, &lt;code&gt;amenity_rank&lt;/code&gt; based on that scale, &lt;code&gt;census_div&lt;/code&gt; code, and &lt;code&gt;county&lt;/code&gt; code. &lt;code&gt;amenity_scale&lt;/code&gt; is an aggregate score for each county and the rank places counties into quartiles based on the scale. &lt;code&gt;census_div&lt;/code&gt; will be easier to work with if we recode it using the names of the divisions represented by the codes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;divisions &amp;lt;- c(&amp;quot;New England&amp;quot;, &amp;quot;Middle Atlantic&amp;quot;, &amp;quot;East North Central&amp;quot;, 
               &amp;quot;West North Central&amp;quot;, &amp;quot;South Atlantic&amp;quot;, &amp;quot;East South Central&amp;quot;,
               &amp;quot;West South Central&amp;quot;, &amp;quot;Mountain&amp;quot;, &amp;quot;Pacific&amp;quot;)

amenities_recode &amp;lt;- amenities |&amp;gt; 
  mutate(census_div = factor(census_div, labels = divisions))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The file &lt;code&gt;all_final_codes.xls&lt;/code&gt; from somewhere contains county data on whether the county is urban or rural and whether it has a dependence on certain industries, among other things. The data set is on sheet 2 of the workbook; other sheets contain descriptions of the data and variable definitions. When importing the data, I rename variables to align them with the other data sets and keep all the economic variables and the geographic ones needed for joining to the rest of the data. (don’t need to get into FIPS vs BEA difference since
not using BEA data here).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;typologies &amp;lt;- read_excel(&amp;quot;all_final_codes.xls&amp;quot;, sheet = 2) %&amp;gt;% 
  rename(county = FIPSTXT, statename = State) %&amp;gt;% 
  select(-FIPS, -County, -BEA_fips)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Join typologies to amenities .. 30113 &amp;amp; 51780 un matched&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;join_df &amp;lt;- amenities |&amp;gt; 
  left_join(typologies, by = &amp;quot;county&amp;quot;) |&amp;gt; 
  left_join(wrluri_by_county, by = c(&amp;quot;county&amp;quot;, &amp;quot;statename&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>The Influence of Land Use Regulation on the Probability That Low-Income Neighbourhoods Will Gentrify</title>
      <link>https://academic-demo.netlify.app/publication/journal-article/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://academic-demo.netlify.app/publication/journal-article/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://academic-demo.netlify.app/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://academic-demo.netlify.app/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
   One 
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   **Two** 
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   Three 
&lt;/span&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/media/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>https://academic-demo.netlify.app/project/external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://academic-demo.netlify.app/project/external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Internal Project</title>
      <link>https://academic-demo.netlify.app/project/internal-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://academic-demo.netlify.app/project/internal-project/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://academic-demo.netlify.app/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://academic-demo.netlify.app/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
